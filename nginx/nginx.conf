# From here:
# https://docs.gunicorn.org/en/stable/deploy.html

worker_processes 1;

events {
  worker_connections 1000; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  use epoll; # to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
    # http://nginx.org/en/docs/http/configuring_https_servers.html
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    sendfile on;

	tcp_nopush on;
	types_hash_max_size 2048;

	include mime.types;
	default_type application/octet-stream;

    upstream flask_app {
        server web:8000 fail_timeout=0;
    }

    # TODO: get real ones
    ssl_certificate     /usr/src/app/cert/host.pem;
    ssl_certificate_key /usr/src/app/cert/host-key.pem;

    # https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html#toc_1
	ssl_protocols TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
	ssl_prefer_server_ciphers on;

    # Prevent host spoofing
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;

        return 444;
    }
    
    # HSTS
    server {
        listen 80;
        listen [::]:80;

        server_name ${NGINX_HOST};

        return 301 https://$host$request_uri;
    }

    server {
        # use 'listen 80 accept_filter=httpready;' for FreeBSD
        listen 443 ssl deferred;
        # client_max_body_size 4G;

        server_name ${NGINX_HOST};

        keepalive_timeout 70;

        # Security headers
        # disable becuz of this: https://hstspreload.org/
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        # TODO: remove unsafe-inline
        add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' rdrama.net code.jquery.com cdn.jsdelivr.net www.google-analytics.com ajax.googleapis.com www.google.com google.com gstatic.com www.gstatic.com";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "origin";

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;

            proxy_pass http://flask_app;
        }

        location /img/ {
            gzip_static on;

            etag on;

            alias /usr/src/app/img/;
        }

        location /nginx_status {
            stub_status;
            #TODO
            allow 127.0.0.1;	#only allow requests from localhost
            deny all;		#deny all other hosts
        }
    }
}
